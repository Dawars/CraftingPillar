buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'


version = "2.0.0"
group= "me.dawars.craftingpillars" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "craftingpillars"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

repositories {
    maven {
        name = "ChickenBones Maven"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name = "Covers Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "JEI Maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "ic2-and-forestry"
        url = "http://maven.ic2.player.to/"
    }

}

dependencies {
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"
    compile "codechicken:EnderStorage:${config.mc_version}-${config.ender_storage_version}:deobf"
    compile "cofh:CoFHCore:${config.mc_version}-${config.cofhcore_version}:deobf"
    compile "cofh:ThermalFoundation:${config.mc_version}-${config.tf_version}:deobf"
    compile "cofh:ThermalExpansion:${config.mc_version}-${config.te_version}:deobf"
    compile "cofh:ThermalDynamics:${config.mc_version}-${config.td_version}:deobf"

    compile "mrtjp:ProjectRed:${config.mc_version}-${config.pr_version}:deobf"


}
version = "${project.config.mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")

println config.mc_version + "-" + config.forge_version
// Setup the forge minecraft plugin data. Specify the preferred forge/minecraft version here
minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mappings
    runDir = "run"
    replace '${mod_version}', project.config.mod_version
    makeObfSourceJar = false
}


processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", project.config.mc_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mc_version': project.config.mc_version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

version = "${project.minecraft.version}-${project.version}"
def commonManifest = {
    attributes 'FMLAT': 'cofh_at.cfg'
}

jar {
    classifier = 'universal'
    manifest commonManifest
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest commonManifest
}

// Tell the artifact system about our extra jars
artifacts {
    archives deobfJar
    archives srcJar
}


// Configure an upload task.
uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven") || project.hasProperty("maven_pass")) {
                if (project.hasProperty("maven_pass")) {
                    println "Uploading to remote maven."
                    repository(url: "http://maven_upload.covers1624.net/") {
                        authentication(userName: "cofh", password: project.getProperty("maven_pass"))
                    }
                } else {
                    println "Uploading to local maven."
                    repository(url: "file://${local_maven}")
                }
                pom {
                    groupId = project.group
                    // Force the maven upload to use the <mcversion>-<version> syntax preferred at files
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'CraftingPillars'
                        url 'https://github.com/Dawars/CraftingPillars'

                        scm {
                            url 'https://github.com/Dawars/CraftingPillars'
                            connection 'scm:git:git://github.com/Dawars/CraftingPillars.git'
                            developerConnection 'scm:git:git@github.com:Dawars/CraftingPillars.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/Dawars/CraftingPillars/issues'
                        }
// TODO: add licence
                        licenses {
                            license {
                                name "All rights reserved"
                                url 'https://github.com/CoFH/ThermalExpansion/blob/master/README.md'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'Dawars'
                                name 'Dawars'
                                roles { role 'developer' }
                            }
                            developer {
                                id 'FBalazs'
                                name 'FBalazs'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
}